generic-service:
  nameOverride: hmpps-person-record

  serviceAccountName: "person-record-service"

  replicaCount: 4

  image:
    repository: quay.io/hmpps/hmpps-person-record
    tag: app_version # override at deployment time
    port: 8080

  ingress:
    enabled: true
    host: app-hostname.local # override per environment
    tlsSecretName: hmpps-person-record-cert
    annotations:
      nginx.ingress.kubernetes.io/configuration-snippet: |
        server_tokens off;
        location /queue-admin/** {
          deny all;
          return 401;
        }


  # Environment variables to load into the deployment
  env:
    JAVA_OPTS: "-Xmx512m"
    SERVER_PORT: "8080"
    SPRING_PROFILES_ACTIVE: "logstash"
    APPLICATIONINSIGHTS_CONNECTION_STRING: "InstrumentationKey=$(APPINSIGHTS_INSTRUMENTATIONKEY)"
    APPLICATIONINSIGHTS_CONFIGURATION_FILE: applicationinsights.json
    HMPPS_SQS_USE_WEB_TOKEN: true

  # Pre-existing kubernetes secrets to load as environment variables in the deployment.
  # namespace_secrets:
  #   [name of kubernetes secret]:
  #     [name of environment variable as seen by app]: [key of kubernetes secret to load]

  namespace_secrets:
    hmpps-person-record:
      APPINSIGHTS_INSTRUMENTATIONKEY: "APPINSIGHTS_INSTRUMENTATIONKEY"
      OFFENDER_SEARCH_CLIENT_ID: "NOMIS_OAUTH_CLIENT_ID"
      OFFENDER_SEARCH_CLIENT_SECRET: "NOMIS_OAUTH_CLIENT_SECRET"
      PRISONER_SEARCH_CLIENT_ID: "NOMIS_OAUTH_CLIENT_ID"
      PRISONER_SEARCH_CLIENT_SECRET: "NOMIS_OAUTH_CLIENT_SECRET"
      DOMAIN_EVENT_AND_DELIUS_API_CLIENT_ID: "NOMIS_OAUTH_CLIENT_ID"
      DOMAIN_EVENT_AND_DELIUS_API_CLIENT_SECRET: "NOMIS_OAUTH_CLIENT_SECRET"
    court-case-events-topic:
        HMPPS_SQS_TOPICS_COURTCASEEVENTS_ARN: "topic_arn"
    hmpps-domain-events-topic:
      HMPPS_SQS_TOPICS_DOMAINEVENTS_ARN: "topic_arn"
    sqs-cpr-court-case-events-secret:
        HMPPS_SQS_QUEUES_CPRCOURTCASEEVENTSQUEUE_QUEUE_NAME: "sqs_queue_name"
    sqs-cpr-court-case-events-dlq-secret:
        HMPPS_SQS_QUEUES_CPRCOURTCASEEVENTSQUEUE_DLQ_NAME: "sqs_queue_name"
    sqs-cpr-delius-offender-events-secret:
      HMPPS_SQS_QUEUES_CPRDELIUSOFFENDEREVENTSQUEUE_QUEUE_NAME: "sqs_queue_name"
    sqs-cpr-delius-offender-events-dlq-secret:
      HMPPS_SQS_QUEUES_CPRDELIUSOFFENDEREVENTSQUEUE_DLQ_NAME: "sqs_queue_name"
    sqs-cpr-offender-events-queue:
      HMPPS_SQS_QUEUES_CPROFFENDEREVENTSQUEUE_QUEUE_NAME: "sqs_queue_name"
    sqs-cpr-offender-events-dlq:
      HMPPS_SQS_QUEUES_CPROFFENDEREVENTSQUEUE_DLQ_NAME: "sqs_queue_name"

    hmpps-person-record-rds-instance-output:
      DATABASE_NAME: "database_name"
      DATABASE_USERNAME: "database_username"
      DATABASE_PASSWORD: "database_password"
      DATABASE_ENDPOINT: "rds_instance_endpoint"

  allowlist:
    groups:
      - internal

generic-prometheus-alerts:
  targetApplication: hmpps-person-record
  alertSeverity: hmpps-person-record-alerts-prod
