generic-service:
  nameOverride: hmpps-person-record

  serviceAccountName: "person-record-service"

  replicaCount: 2

  resources:
    limits:
      memory: 4Gi
    requests:
      memory: 4Gi
  image:
    repository: quay.io/hmpps/hmpps-person-record
    tag: app_version # override at deployment time
    port: 8080

  ingress:
    enabled: true
    host: app-hostname.local # override per environment
    tlsSecretName: hmpps-person-record-cert
    annotations:
      nginx.ingress.kubernetes.io/server-snippet: |
        server_tokens off;
        location /queue-admin/** {
          deny all;
          return 401;
        }
        location /populatefromprison {
          deny all;
          return 401;
        }
        location /populatefromprobation {
          deny all;
          return 401;
        }
        location /updatefromprobation {
          deny all;
          return 401;
        }

  # Environment variables to load into the deployment
  env:
    JAVA_OPTS: "-Xmx4096m"
    SERVER_PORT: "8080"
    SPRING_PROFILES_ACTIVE: "logstash"
    APPLICATIONINSIGHTS_CONNECTION_STRING: "InstrumentationKey=$(APPINSIGHTS_INSTRUMENTATIONKEY)"
    APPLICATIONINSIGHTS_CONFIGURATION_FILE: applicationinsights.json
    HMPPS_SQS_USE_WEB_TOKEN: true

  # Pre-existing kubernetes secrets to load as environment variables in the deployment.
  # namespace_secrets:
  #   [name of kubernetes secret]:
  #     [name of environment variable as seen by app]: [key of kubernetes secret to load]

  namespace_secrets:
    hmpps-person-record:
      APPINSIGHTS_INSTRUMENTATIONKEY: "APPINSIGHTS_INSTRUMENTATIONKEY"
      PRISONER_SEARCH_CLIENT_ID: "NOMIS_OAUTH_CLIENT_ID"
      PRISONER_SEARCH_CLIENT_SECRET: "NOMIS_OAUTH_CLIENT_SECRET"
      PRISON_SERVICE_CLIENT_ID: "NOMIS_OAUTH_CLIENT_ID"
      PRISON_SERVICE_CLIENT_SECRET: "NOMIS_OAUTH_CLIENT_SECRET"
      CORE_PERSON_RECORD_AND_DELIUS_CLIENT_ID: "NOMIS_OAUTH_CLIENT_ID"
      CORE_PERSON_RECORD_AND_DELIUS_CLIENT_SECRET: "NOMIS_OAUTH_CLIENT_SECRET"
    sqs-cpr-court-cases-secret:
        HMPPS_SQS_QUEUES_CPRCOURTCASESQUEUE_QUEUE_NAME: "sqs_queue_name"
    sqs-cpr-court-cases-dlq-secret:
        HMPPS_SQS_QUEUES_CPRCOURTCASESQUEUE_DLQ_NAME: "sqs_queue_name"
    sqs-cpr-delius-offender-events-secret:
      HMPPS_SQS_QUEUES_CPRDELIUSOFFENDEREVENTSQUEUE_QUEUE_NAME: "sqs_queue_name"
    sqs-cpr-delius-offender-events-dlq-secret:
      HMPPS_SQS_QUEUES_CPRDELIUSOFFENDEREVENTSQUEUE_DLQ_NAME: "sqs_queue_name"
    sqs-cpr-delius-merge-events-secret:
      HMPPS_SQS_QUEUES_CPRDELIUSMERGEEVENTSQUEUE_QUEUE_NAME: "sqs_queue_name"
    sqs-cpr-delius-merge-events-dlq-secret:
      HMPPS_SQS_QUEUES_CPRDELIUSMERGEEVENTSQUEUE_DLQ_NAME: "sqs_queue_name"
    sqs-cpr-delius-delete-events-secret:
      HMPPS_SQS_QUEUES_CPRDELIUSDELETEEVENTSQUEUE_QUEUE_NAME: "sqs_queue_name"
    sqs-cpr-delius-delete-events-dlq-secret:
      HMPPS_SQS_QUEUES_CPRDELIUSDELETEEVENTSQUEUE_DLQ_NAME: "sqs_queue_name"
    sqs-cpr-nomis-events-secret:
      HMPPS_SQS_QUEUES_CPRNOMISEVENTSQUEUE_QUEUE_NAME: "sqs_queue_name"
    sqs-cpr-nomis-events-dlq-secret:
      HMPPS_SQS_QUEUES_CPRNOMISEVENTSQUEUE_DLQ_NAME: "sqs_queue_name"
    sqs-cpr-nomis-merge-events-secret:
      HMPPS_SQS_QUEUES_CPRNOMISMERGEEVENTSQUEUE_QUEUE_NAME: "sqs_queue_name"
    sqs-cpr-nomis-merge-events-dlq-secret:
      HMPPS_SQS_QUEUES_CPRNOMISMERGEEVENTSQUEUE_DLQ_NAME: "sqs_queue_name"
    sqs-cpr-recluster-events-secret:
      HMPPS_SQS_QUEUES_CPRRECLUSTEREVENTSQUEUE_QUEUE_NAME: "sqs_queue_name"
    sqs-cpr-recluster-events-dlq-secret:
      HMPPS_SQS_QUEUES_CPRRECLUSTEREVENTSQUEUE_DLQ_NAME: "sqs_queue_name"

    hmpps-person-record-rds-instance-output:
      DATABASE_NAME: "database_name"
      DATABASE_USERNAME: "database_username"
      DATABASE_PASSWORD: "database_password"
      DATABASE_ENDPOINT: "rds_instance_endpoint"

  allowlist:
    groups:
      - internal

  retryDlqCronjob:
    enabled: true

generic-prometheus-alerts:
  targetApplication: hmpps-person-record
  alertSeverity: hmpps-person-record-alerts-prod
