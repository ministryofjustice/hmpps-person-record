version: 2.1

orbs:
  hmpps: ministryofjustice/hmpps@8

  test-orb:
    orbs:
      hmpps: ministryofjustice/hmpps@8
    jobs:
      database_schema_report:
        description: >
          Job to generate a schema report for a postgres database, using schemaspy. Runs against postgres in docker
          An HTML report is generated and is available on the artifacts tab of the circleci job
        executor: << parameters.executor_param >>
        parameters:
          executor_param:
            type: executor
            description: executor to use
          initialise_database:
            type: string
            default: "./gradlew check"
            description: A command which will initialise the database schema
          database_name:
            type: string
            default: "postgres"
            description: Name of the database
          host:
            type: string
            default: "localhost"
            description: Host name of the database
          port:
            type: string
            default: "5432"
            description: Port number of the database
          schema:
            type: string
            description: Schema name
          user:
            type: string
            default: "root"
            description: Database user name
          password:
            type: string
            default: "dev"
            description: Database password
          schemaspy_version:
            type: string
            default: "6.2.4"
            description: schemaspy version
          postgres_driver_version:
            type: string
            default: "42.7.3"
            description: Postgres driver version


        steps:
          - checkout
          - run:
              name: Install schemaspy
              command: curl -L https://github.com/schemaspy/schemaspy/releases/download/v6.2.4/schemaspy-<< parameters.schemaspy_version >>.jar --output /tmp/schemaspy.jar
          - run:
              name: Install postgres jdbc driver
              command: curl -L https://jdbc.postgresql.org/download/postgresql-<< parameters.postgres_driver_version >>.jar --output /tmp/postgres-driver.jar
          - run:
              name: Execute a command to initialise the database schema
              command: << parameters.initialise_database >>
          - run:
              name: Generate database schema report
              command: |
                java -jar /tmp/schemaspy.jar \
                  -t pgsql \
                  -dp /tmp/postgres-driver.jar \
                  -db  << parameters.database_name >> \
                  -host << parameters.host >> \
                  -port << parameters.port >> \
                  -s << parameters.schema >> \
                  -vizjs \
                  -u << parameters.user >> \
                  -p << parameters.password >> \
                  -o /tmp/schemaspy
          - store_artifacts:
              path: /tmp/schemaspy
              destination: schema

parameters:
  alerts-slack-channel:
    type: string
    default: hmpps-person-record-alerts
  releases-slack-channel:
    type: string
    default: hmpps-person-record-alerts

jobs:
  validate:
    executor:
      name: hmpps/java_localstack_postgres
      jdk_tag: "21.0"
      localstack_tag: "3.0"
      postgres_tag: "16.1"
    steps:
      - setup_remote_docker
      - checkout
      - restore_cache:
          keys:
            - gradle-{{ checksum "build.gradle.kts" }}
            - gradle-
      - run:
          command: ./gradlew build
      - save_cache:
          paths:
            - ~/.gradle
          key: gradle-{{ checksum "build.gradle.kts" }}
      - store_test_results:
          path: build/test-results
      - store_artifacts:
          path: build/reports/tests
          destination: test


workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - validate:
          filters:
            tags:
              ignore: /.*/
      - test-orb/database_schema_report:
          schema: "personrecordservice"
          executor_param:
            name: hmpps/java_localstack_postgres
            jdk_tag: "21.0"
            localstack_tag: "3.0"
            postgres_tag: "16.1"
      - hmpps/helm_lint:
          name: helm_lint
      - hmpps/build_multiplatform_docker:
          name: build_docker
          filters:
            branches:
              only:
                - main
      - hmpps/deploy_env:
          name: deploy_dev
          env: "dev"
          jira_update: true
          pipeline_id: <<pipeline.id>>
          pipeline_number: <<pipeline.number>>
          context: hmpps-common-vars
          filters:
            branches:
              only:
                - main
          requires:
            - validate
            - build_docker
            - helm_lint
          helm_timeout: 5m
      - request-preprod-approval:
          type: approval
          requires:
            - deploy_dev
      - hmpps/deploy_env:
          name: deploy_preprod
          env: "preprod"
          jira_update: true
          pipeline_id: <<pipeline.id>>
          pipeline_number: <<pipeline.number>>
          jira_env_type: staging
          context:
            - hmpps-common-vars
            - hmpps-person-record-preprod
          requires:
            - request-preprod-approval
          helm_timeout: 5m
      - request-prod-approval:
          type: approval
          requires:
            - deploy_preprod
      - hmpps/deploy_env:
          name: deploy_prod
          env: "prod"
          jira_update: true
          pipeline_id: <<pipeline.id>>
          pipeline_number: <<pipeline.number>>
          jira_env_type: production
          slack_notification: true
          slack_channel_name: << pipeline.parameters.releases-slack-channel >>
          context:
            - hmpps-common-vars
            - hmpps-person-record-prod
          requires:
            - request-prod-approval
          helm_timeout: 5m

  security:
    triggers:
      - schedule:
          cron: "34 7 * * 1-5"
          filters:
            branches:
              only:
                - main
    jobs:
      - hmpps/gradle_owasp_dependency_check:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - hmpps-common-vars
          jdk_tag: "21.0"
          cache_key: "v3_0"
      - hmpps/trivy_latest_scan:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - hmpps-common-vars
      - hmpps/veracode_pipeline_scan:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - veracode-credentials
            - hmpps-common-vars
  security-weekly:
    triggers:
      - schedule:
          cron: "0 7 * * 1"
          filters:
            branches:
              only:
                - main
    jobs:
      - hmpps/veracode_policy_scan:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - veracode-credentials
            - hmpps-common-vars
