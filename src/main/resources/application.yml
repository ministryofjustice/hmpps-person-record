spring:
  application:
    name: hmpps-person-record-service
  codec:
    max-in-memory-size: 10MB
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: ${nomis-oauth.base-url}/.well-known/jwks.json
      client:
        registration:
          prisoner-search:
            provider: nomis-oauth-service
            client-authentication-method: client_secret_basic
            authorization-grant-type: client_credentials
            client-id: ${prisoner-search.client-id}
            client-secret: ${prisoner-search.client-secret}
          prison-service:
            provider: nomis-oauth-service
            client-authentication-method: client_secret_basic
            authorization-grant-type: client_credentials
            client-id: ${prison-service.client-id}
            client-secret: ${prison-service.client-secret}
          core-person-record-and-delius:
            provider: nomis-oauth-service
            client-authentication-method: client_secret_basic
            authorization-grant-type: client_credentials
            client-id: ${core-person-record-and-delius.client-id}
            client-secret: ${core-person-record-and-delius.client-secret}
        provider:
          nomis-oauth-service:
            token-uri: ${nomis-oauth.base-url}/auth/oauth/token

  cloud.openfeign.client.config:
    default:
      logger-level: basic
      connect-timeout: 5000
      read-timeout: 30000
      default-request-headers:
        Accept: application/json
        Content-Type: application/json

  jackson:
    date-format: "yyyy-MM-dd HH:mm:ss"
    serialization:
      WRITE_DATES_AS_TIMESTAMPS: false

  profiles:
    group:
      test:
        - "stdout"

  datasource:
    url: jdbc:postgresql://${database.endpoint:localhost:5432}/${database.name:postgres}?currentSchema=${database.schema.name}&user=${database.username:root}&password=${database.password:dev}&stringtype=unspecified&sslmode=verify-full

  jpa:
    open-in-view: false

  flyway:
    enabled: true

database:
  schema:
    name: personrecordservice

server:
  port: 8080
  servlet:
    context-path: /
  forward-headers-strategy: native
  tomcat:
    remoteip:
      remote-ip-header: x-forwarded-for
      protocol-header: x-forwarded-proto
      internal-proxies: 10\.\d{1,3}\.\d{1,3}\.\d{1,3}|192\.168\.\d{1,3}\.\d{1,3}|169\.254\.\d{1,3}\.\d{1,3}|127\.\d{1,3}\.\d{1,3}\.\d{1,3}|172\.1[6-9]{1}\.\d{1,3}\.\d{1,3}|172\.2[0-9]{1}\.\d{1,3}\.\d{1,3}|172\.3[0-1]{1}\.\d{1,3}\.\d{1,3}|0:0:0:0:0:0:0:1|::1|100\.6[4-9]\.\d{1,3}\.\d{1,3}|100\.[7-9][0-9]{1}\.\d{1,3}\.\d{1,3}|100\.1[0-1][0-9]{1}\.\d{1,3}\.\d{1,3}|100\.12[0-7]\.\d{1,3}\.\d{1,3}
  shutdown: graceful
  error:
    include-message: always

management:
  endpoints:
    web:
      base-path: /
      exposure:
        include: 'info, health'
  endpoint:
    health:
      cache:
        time-to-live: 2000ms
      show-components: always
      show-details: when_authorized
      probes:
        enabled: true
    info:
      cache:
        time-to-live: 2000ms

retry:
  delay: 2000

populate-from-nomis:
  page-size: 1000

populate-from-probation:
  page-size: 1000

populate-person-match:
  batch-size: 1000

aws:
  region-name: eu-west-2